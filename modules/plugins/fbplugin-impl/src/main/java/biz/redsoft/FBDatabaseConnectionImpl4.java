package biz.redsoft;

import org.firebirdsql.gds.BatchParameterBuffer;
import org.firebirdsql.gds.ISCConstants;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.impl.BatchParameterBufferImpl;
import org.firebirdsql.gds.impl.TransactionParameterBufferImpl;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.nativeoo.gds.ng.FbInterface;

import java.sql.Connection;
import java.sql.SQLException;

/**
 * Created by Vasiliy on 4/6/2017.
 */
public class FBDatabaseConnectionImpl4 extends FBDatabaseConnectionImpl {

    @Override
    public IFBBatch createBatch(String query) throws SQLException {

        BatchParameterBuffer buffer = new BatchParameterBufferImpl();
        buffer.addArgument(FbInterface.IBatch.TAG_RECORD_COUNTS, 1);
        // continue batch processing in case of errors in some messages
        buffer.addArgument(BatchParameterBuffer.TAG_MULTIERROR, 1);
        // enable blobs processing - IDs generated by firebird engine
        buffer.addArgument(BatchParameterBuffer.TAG_BLOB_POLICY, BatchParameterBuffer.BLOB_ID_ENGINE);

        TransactionParameterBuffer tpb = new TransactionParameterBufferImpl();
        tpb.addArgument(ISCConstants.isc_tpb_read_committed);
        tpb.addArgument(ISCConstants.isc_tpb_rec_version);
        tpb.addArgument(ISCConstants.isc_tpb_write);
        tpb.addArgument(ISCConstants.isc_tpb_wait);

        return new FBBatchImpl(fbConnection.getGDSHelper().getCurrentDatabase().createBatch(
                fbConnection.getGDSHelper().getCurrentDatabase().startTransaction(tpb), query, buffer));
    }
}
